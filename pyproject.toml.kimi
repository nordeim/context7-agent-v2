[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "context7-agent-v2"
version = "2.0.0"
description = "Production-ready terminal AI agent with Pydantic-AI v0.5+ and MCP"
authors = [
    {name = "Context7 Team", email = "team@context7.ai"}
]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
keywords = ["ai", "terminal", "pydantic", "mcp", "openai"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Terminals",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "pydantic-ai[openai]>=0.5.0,<0.6.0",
    "pydantic>=2.7.0,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "anyio>=4.0.0,<5.0.0",
    "rich>=13.0.0,<14.0.0",
    "aiofiles>=23.0.0,<24.0.0",
    "openai>=1.30.0,<2.0.0",
    "typing-extensions>=4.0.0,<5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
]

[project.urls]
Homepage = "https://github.com/nordeim/context7-agent-v2"
Documentation = "https://docs.context7.ai"
Repository = "https://github.com/nordeim/context7-agent-v2"
Issues = "https://github.com/nordeim/context7-agent-v2/issues"

[project.scripts]
context7 = "src.cli:main"

[tool.setuptools]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers --disable-warnings"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "asyncio: marks tests as asyncio tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
